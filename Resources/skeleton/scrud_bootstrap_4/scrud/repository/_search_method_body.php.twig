<?php
{% if config.search.pagination %}
    if ((int) $page < 1) {
        throw new \InvalidArgumentException(sprintf('The page argument can not be less than 1 (value : %s)', $page));
    }
{% if config.search.filter_view.activate %}
    $firstResult = ($page - 1) * $data['number_by_page'];
{% else %}
    $firstResult = ($page - 1) * $numberByPage;
{% endif %}
{% endif %}
$query = $this->{{ search_query_method }}({% if config.search.filter_view.activate %}$data{% endif %});

$query
{% if config.search.pagination %}
    ->setFirstResult($firstResult)
    ->setMaxResults({% if config.search.filter_view.activate %}$data['number_by_page']{% else %}$numberByPage{% endif %})
{% endif %}
{% for order in config.search.order %}
    ->addOrderBy('{{ order.by|replace({ 'entity': entity_first_letter })  }}', '{{ order.direction }}'){% if loop.last %};{% endif %}
{% endfor %}
{% if config.search.pagination %}
    $paginator = new Paginator($query);
    if ($paginator->count() <= $firstResult && 1 != $page) {
        if (!$request->get('page')) {
            $session->set('{{ route_name }}_page', --$page);

            return $this->search($request, $session, {% if config.search.filter_view.activate %}$data, {% endif %}$page);
        } else {
            throw new NotFoundHttpException();
        }
    }

    return $paginator;
{% else %}

    return $query->getQuery()->getResult();
{% endif %}